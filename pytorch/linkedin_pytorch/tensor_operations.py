# -*- coding: utf-8 -*-
"""tensor-operations.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1drME1c0GCimwZGjMfq8TAcr8EouPfbeK
"""

import torch

t = torch.tensor
v0 = torch.tensor(7.56)
v0b = torch.tensor([7.56])
v1 = t([1,2,3,4,5,6,7,8])

va = t([[1,2,3], [4,5,6]])
vb = t([[11,12,13], [15, 16, 17]])


for item in [
    (v0, v0.shape),
     (v0b, v0b.shape),
    v1[1:8],
    v1[v1>4],

]:
  print(item)

print("- "*30)

for d in [-3, -2, 1, 0, 1, 2] :
  print(f"--- d = {d} ---")
  print(torch.stack((va, vb), dim=d))

print("- "*30)

for item in torch.unbind(va, dim=0):
  print(item)

import torch

tt = torch.tensor

va = t([[1,2,3], [4,5,6]])
vb = t([[2,12,13], [15, 16, 17]])


for item in [
    va.true_divide(vb),
]:
  print(item)

# Algebra
import torch

tt = torch.tensor

for item in [
    torch.matmul(tt([3,4]), tt([0, 1])),
    torch.matmul(tt([3,4]), tt([1, 1]))/(2**0.5),

    torch.matmul(tt([[1, 2],[3,4],[5, 6]]), tt([[1,1,1],[10, 10, 10]])),
    torch.linalg.multi_dot(
                    (
                    tt([[1.0, 2],[3,4],[5, 6]]),
                    tt([[1.0,1,1],[10, 10, 10]]),
                    tt([[1/3], [1/3], [1/3]])
                    )
                    ),
    torch.linalg.eig(tt([[1.0,2],[3,4]]))
]:


  print(item)

# autograd
import torch

x = torch.tensor([ 3.0 ], requires_grad=True)
y = torch.tensor([ 1.0 ], requires_grad=True)
z = torch.tensor([ 5.0 ], requires_grad=True)


a = x - y

f = z * a


f.backward()
for item in [
    x,y,z,f, type(f.backward),
    x.grad, y.grad, z.grad,
]:


  print(item)

# diff

import torch

tt = torch.tensor

x = torch.full((8, 5), 10)
y = torch.arange(16)

for item in [
    x, y,
    x.chunk(4, dim=0),
    y.chunk(4),
    x.split([5, 3], dim=0),
    y.split([4, 6, 6])

]:


  print(item)