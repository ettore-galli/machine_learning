# -*- coding: utf-8 -*-
"""colab-primer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/122pbPKMTe4gjIwgnR2_I-5ngSpnygOQT
"""

import torch

torch.cuda.is_available()

v1 = torch.tensor([1,2,3])

k = torch.tensor([3, 2, 1])

for result in [
    v1.dot(k.T),
    v1 - k,
    v1.size()
]:
  print(result)

import torch
import numpy as np

v1 = torch.tensor([1,2,3])
v2 = torch.tensor((1,2,3))
v3 = torch.tensor(np.array([1,2,3]))

for item in [
    v1,
    v2,
    v3,
    torch.empty(3, 4),
    torch.ones(3, 4),
    torch.zeros(3, 4),
    torch.randn(3, 4),
    torch.randint(1, 90, (3, 4))
]:
  print("-"*50)
  print(item)

import torch


v1 = torch.tensor([1,2,3])

t2 = torch.tensor([[1,2,3], [4,5,6], [7,8,9], [3,2,2]])

def describe(t:torch.tensor):
  return f"{t}, \n--> {t.device}, {t.dtype}, {t.shape}, {t.ndim}"

for item in [v1, t2]:
  print("-"*50)
  print(describe(item))

import torch


v1 = torch.tensor([1,2,3], dtype=torch.int8)
v2 = torch.tensor([1.0,2.0,3.1], dtype=torch.float32)
v3 = torch.tensor([1,2,3], dtype=torch.int16)

t2 = torch.tensor([[1,2,3], [4,5,6], [7,8,9], [3,2,2]])

def describe(t:torch.tensor):
  return f"{t}, \n--> {t.device}, {t.dtype}, {t.shape}, {t.ndim}"

for item in [v1, v2, v3, t2]:
  print("-"*50)
  print(describe(item))

import torch

torch.manual_seed(111)

v1 = torch.rand(3,3)
v2 = torch.randn(3,3)
v3 = torch.randint(1, 6, (3,3))

others = [
    torch.zeros_like(v1),
    torch.ones_like(v1),
    torch.empty_like(v1),
]
def describe(t:torch.tensor):
  return f"{t}"

for item in [v1, v2, v3] + others:
  print("-"*50)
  print(describe(item))

import torch



torch.full(size=(4,5),fill_value=5)